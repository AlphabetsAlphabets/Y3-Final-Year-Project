import{A as u,g as l,B as i,k as f,s as w}from"./CovMCToo.js";function p(r,e,t){u(()=>{var s=l(()=>e(r,t==null?void 0:t())||{});if(t&&(s!=null&&s.update)){var o=!1,n={};i(()=>{var a=t();f(a),o&&w(n,a)&&(n=a,s.update(a))}),o=!0}if(s!=null&&s.destroy)return()=>s.destroy()})}const c=async r=>{var t;const e=await r.list("project");return((t=e==null?void 0:e.result)==null?void 0:t.resultRows)||[]},j=async(r,e,t)=>(await(r==null?void 0:r.insert("project","name, color",`'${e}', '${t}'`)),await c(r)),$=async(r,e,t)=>(await r.update("project",`color = '${t}'`,`name = '${e}'`),await c(r)),d=async(r,e,t)=>(await r.update("project",`name = '${t}'`,`name = '${e}'`),await c(r)),R=async(r,e)=>{const t={},s=await r.list("project","name",`color = '${e}'`);if(!s)return console.error("Failed to execute query."),t;if(!s.result)return console.error("No results from response."),t;const o=s.result;return o.resultRows?o.resultRows.length!=1?(console.error("More than one project detected from the same color."),t):s.result.resultRows[0]:(console.error("No result rows."),t)};export{p as a,$ as b,j as c,R as f,c as l,d as u};
